2019-05-06 in class: Jquery ajax requests
1. Create Spring app with controller
2. Create front end form controlled by Jquery to create new employee.

2019-05-06 Homework:
1. Create form on frontend for searching employee by id
2. Create controller in Java to process search employee by id
(to return EmployeeDto object)

2019-05-08 in class: JQuery ajax requests, form validation

2019-05-08 Homework:
Add new field "Manager" to the employee form (input containing manager's name of the employee)
Add validation (can not be empty)
Add this field to EmployeeDto in Java part of the project

2019-05-13 in class: show employees list (table), generating html from js dynamically

2019-05-13 Homework: generate select position dropdown dynamically

2019-05-15 In class: generate select position dropdown dynamically, edit employee data - edit button, click event, converting element id to DB record id

2019-05-15 Homework: think about alternative method of getting record ID from employees table

2019-05-18 In Class: positions and employee data receive from BE

2019-05-21 In Class: fixing ajax async calls bugs, creating new user from form, updating employee's table

2019-05-23 In class: edit employee (FE + BE), delete employee (BE)

2019-05-24 In class: delete employee from front-end functionality, small bugs fixing, clearing off console logs

2019-05-24 Home work: create form for adding employee role

2019-05-28 In Class: Angular:
- created angular app
- created routing
- created components: app-component, header, footer
- created navigation in header app

2019-05-31 In Class: Angular:
- creating reacting form
- FormTemplate: ngModel - double binding
- value binding
- events handling

2019-05-31 HomeWork: create calculator component (like in Windows)

2019-06-04 In Class:
- Create signup layout
- Rename "signup" component to the "user form" component
- "User form" component to receive "UserDto" as a parameter
- "invalid", "dirty", "touched" form field state
- Add validators to the fields:
    - firstName - required
    - lastName - required
- Show the validation errors below the form fields

2019-06-06 In Class:
- "User form" component to emit the event containing UserDto
- Do not allow to submit the form if one of the fields contains validation errors
- validation errors components
- UserService (http)


